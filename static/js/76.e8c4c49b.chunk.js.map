{"version":3,"file":"static/js/76.e8c4c49b.chunk.js","mappings":"sQACA,GAAgB,KAAO,mBAAmB,KAAO,oB,SCyDjD,MApDA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAkBH,GAFzC,OAEUJ,EAFV,OAGIC,GAAQ,OAAID,IACZG,GAAa,GAJjB,gDAMIK,QAAQC,IAAI,uBAAZ,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACN,KAEJE,EAAAA,EAAAA,YAAU,WACHJ,GACHS,OAAOC,SAAS,CACdC,IAAK,MACLC,SAAU,UAGf,GAAE,CAACZ,IAEAA,GACK,SAACa,EAAA,EAAD,IAGW,IAAhBf,EAAKgB,QACA,gBAAKC,UAAWC,EAAAA,OAAhB,sCAIP,eAAID,UAAWC,EAAAA,KAAf,SACGlB,EAAKmB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACR,2BACE,gBACEC,IAAG,0CAAqCJ,GACxCK,IAAKJ,EACLJ,UAAWC,EAAAA,SAEb,cAAGD,UAAWC,EAAAA,KAAd,SAAyBG,KACzB,uCAAeC,OAPRC,EADD,KAaf,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"name\":\"Cast_name__6UbFm\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../services/fetchApi';\nimport Loader from '../Loader/Loader';\nimport css from './Cast.module.css';\n\nfunction Cast() {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await fetchMovieCredits(movieId);\n        setData([...data]);\n        setIsLoading(false);\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      window.scrollTo({\n        top: '300',\n        behavior: 'smooth',\n      });\n    }\n  }, [isLoading]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (data.length === 0) {\n    return <div className={css.noInfo}>There is no information</div>;\n  }\n\n  return (\n    <ul className={css.list}>\n      {data.map(({ profile_path, name, character, id }) => (\n        <li key={id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n            alt={name}\n            className={css.image}\n          />\n          <p className={css.name}>{name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Cast;\n"],"names":["useState","data","setData","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieCredits","console","log","fetchData","window","scrollTo","top","behavior","Loader","length","className","css","map","profile_path","name","character","id","src","alt"],"sourceRoot":""}